import Head from "next/head";
import Link from "next/link";
import { RouterOutputs, api } from "~/utils/api";

import { useUser } from "@clerk/nextjs";
import { SignInButton, SignOutButton } from "@clerk/nextjs";
import { Spinner } from "~/components/loading";

import Image from "next/image";
type PostWithUser = RouterOutputs["posts"]["getAll"][number]


const PostView = (props: PostWithUser) =>{
  const { post, author } = props;
  return (
    <div key={post.id} className="flex gap-3 border-b border-slate-400 p-4">
      <div className="flex flex-col">
        <div className="flex gap-1 text-slate-300">
          <Link href={`/@${author.username}`}>
            <span>{`@${author.username} `}</span>
          </Link>
        </div>
        <span className="text-2xl">{post.content}</span>
      </div>
    </div>
  );

}
const CreatePostWizard = () => {
  const { user } = useUser();

  

  if(!user) return null

  return( 
    <div className="flex bg-black w-full gap-3"><img src={user.imageUrl} alt="profile pic" className="h-14 w-14 rounded-full" />
    <input placeholder="ednej" type="text" className="bg-transparent"/>
    </div>
  )

 
  } 



  const Feed = () =>{
    const { data, isLoading: postsLoading } = api.posts.getAll.useQuery();
  
    if (postsLoading)
      return (
        <div className="flex grow">
          <Spinner />
        </div>
      );
  
    if (!data) return <div>Something went wrong</div>;
  
    return (
      <div className="flex grow flex-col overflow-y-scroll">
        {[...data, ...data].map((fullPost) => (
          <PostView {...fullPost} key={fullPost.post.id} />
        ))}
      </div>
    );
  }

export default function Home() {
  
 const { isLoaded: userLoaded, isSignedIn } = useUser();

  // Start fetching asap
  api.posts.getAll.useQuery();

  // Return empty div if user isn't loaded
  if (!userLoaded) return <div />;

                                                                                                                                    

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <div className="w-full border-x-3 border-slate-200 md:max-w-2xl bg-red-500">
        <div>
        {!isSignedIn &&  (
          <div className="flex justify-center">
            <SignInButton/>
          </div>
        )
        
        }
     <SignOutButton/>
     {isSignedIn && <CreatePostWizard />} 
        </div>
        <div>
        <Feed/>
        </div>
        </div>
      </main>
    </>
  );
}
